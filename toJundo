
int wp, rp;
struct st 
{
    int i, j, parentqnum, d;
};
int Des_I;
int Des_J;
int Src_I;
int Src_J;
int min = 1000;
struct st route[QUE];
int chk[35][75];
int map[35][75];

void PathFind(int I, int J, int n)
{
   wp = 0; rp = 0; 
   memset(route, 0, sizeof(route));

   route[wp].parentqnum = -1; 
   route[wp].i = I; 
   route[wp].j = J;
   route[wp].d = 0;
   wp++; wp %= QUE;

   for(;;)
   {
       int ti, tj, td, k, ni, nj, nd;              
       if(rp == wp) 
       {td = -1; break;}
       
       ti = route[rp].i; 
       tj = route[rp].j;
       td = route[rp].d;
       rp++; rp %= QUE;
       
       if(tni == Des_I && tnj == Des_J)
       {
           td += 1; 
           break;
       }
       
       for(k = 0; k < 4; k++)
       {
           
       }
       
}
